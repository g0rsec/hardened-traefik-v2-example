version: '3.8'

services:
  socketproxy:
    image: tecnativa/docker-socket-proxy
    container_name: "traefik_socket_proxy"
    restart: always
    environment:
      - CONTAINERS=1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - socket-proxy

  traefik:
    image: traefik:latest
    container_name: "traefik"
    restart: always
    user: 1000:1000
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    runtime: runc
    networks:
      - traefik-proxy
      - socket-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./logs:/var/log/access.log
      - ./config/acme.json:/etc/traefik/acme.json
      - ./config/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./config/traefik.dynamic.toml:/etc/traefik/traefik.dynamic.toml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard_http.rule=Host(`dashboard.domain.tld`) || Host(`www.dashboard.domain.tld`)"
      - "traefik.http.routers.dashboard_http.entrypoints=http"
      - "traefik.http.routers.dashboard_http.middlewares=redirect-to-https@file"
      - "traefik.http.routers.dashboard_https.entrypoints=https"
      - "traefik.http.routers.dashboard_https.middlewares=headers-security@file, dashboard-auth@file"
      - "traefik.http.routers.dashboard_https.rule=Host(`dashboard.domain.tld`) || Host(`www.dashboard.domain.tld`)"
      - "traefik.http.routers.dashboard_https.tls=true"
      - "traefik.http.routers.dashboard_https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard_https.service=api@internal"
    depends_on:
      - socketproxy

networks:
  traefik-proxy:
    external: true
  socket-proxy:
    internal: true